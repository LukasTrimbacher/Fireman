<?xml version="1.0" encoding="UTF-8"?>
<!--
 ===============================================================================
 (c) eThis e.U. and sITolution e.U.
 ALL RIGHTS RESERVED.
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 This document contains information belonging to
 eThis e.U. and sITolution e.U.
 No part of this document or information contained herein may be copied,
 provided, used, or communicated about its content to any third party
 in any form or by any means without explicit written permission by
 eThis e.U. and sITolution e.U.
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 All trademarks used in this document are property of their respective owners.
 ===============================================================================
 -->
 
<!--
	a 'toggleSwitch' featuring labels and a swapping of directions.
-->

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:cc="http://xmlns.jcp.org/jsf/composite"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
>
	
	<cc:interface componentType="ajaxListenerDelegator">
		<cc:attribute name="label" />                             <!-- the user presented label, presented on the 'on' side -->
		<cc:attribute name="offLabel" />                          <!-- the user presented label shown at the 'off' side of the switch -->
		<cc:attribute name="onAtLeft" default="true" />           <!-- true (default) to render the 'on' state at the left end, false to render the 'off' state on the left end -->
		<cc:attribute name="value" />                             <!-- the binding for the value of the switch -->
		<cc:attribute name="update" />                            <!-- the IDs (expressions) of the element to update upon changes -->
		<cc:attribute name="disabled" default="false"/>           <!-- true if the widget shall not accept input, false (default) otherwise -->
		<cc:attribute name="style" />                             <!-- the CSS style for the outer widget -->
		<cc:attribute name="styleClass" />                        <!-- the CSS style class for the outer widget -->		
		<cc:attribute name="listener" 
			method-signature="void listener()" />                 <!-- the listener that is notified about state changes -->
	</cc:interface>
	
	<cc:implementation>
		<p:outputLabel for="@next" 
			value="#{ cc.attrs.onAtLeft ? cc.attrs.label : cc.attrs.offLabel }" 
			rendered="#{ (cc.attrs.onAtLeft and !(empty cc.attrs.label)) or (!cc.attrs.onAtLeft and !(empty cc.attrs.offLabel)) }"
		/>
		<div style="width: max-content;"
			class="item-box #{ (empty cc.attrs.label ? (empty cc.attrs.offLabel ? '' : (cc.attrs.onAtLeft ? 'left' : 'right')) : (empty cc.attrs.offLabel ? (cc.attrs.onAtLeft ? 'right' : 'left') : 'in-between')) }"
		>
			<p:toggleSwitch value="#{ cc.attrs.value }"
				styleClass="#{ cc.attrs.onAtLeft ? 'swap' : '' }"	
			>
				<p:ajax update="#{ cc.attrs.update }" 
					listener="#{ cc.namedAjaxListener('listener') }"
				/>
			</p:toggleSwitch>
		</div>
		<p:outputLabel for="@previous"
			styleClass="suffix"
			value="#{ cc.attrs.onAtLeft ? cc.attrs.offLabel : cc.attrs.label }" 
			rendered="#{ (cc.attrs.onAtLeft and !(empty cc.attrs.offLabel)) or (!cc.attrs.onAtLeft and !(empty cc.attrs.label)) }"
		/>
	</cc:implementation>
		
</html>